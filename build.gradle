plugins {
    // Required for using BOMs
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
}

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'application'


description = 'Basic Java Project'
group = 'net.codaverde'

mainClassName = 'net.codaverde.java.project.Main'

repositories {
    jcenter()
}

dependencyManagement {
    imports {
        mavenBom 'org.apache.logging.log4j:log4j-bom:latest.integration'
    }
}

dependencies {
    // Requirements
    implementation 'org.apache.logging.log4j:log4j-api'
    annotationProcessor 'org.apache.logging.log4j:log4j-core'
    implementation 'info.picocli:picocli:latest.integration'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:latest.integration'
    implementation 'com.fasterxml.jackson.core:jackson-databind:latest.integration'
    implementation 'org.apache.commons:commons-configuration2:latest.integration'
    implementation 'commons-beanutils:commons-beanutils:latest.integration'
    // Convenience
    implementation 'com.google.guava:guava:latest.integration'
    implementation 'com.google.guava:guava:latest.integration'
    implementation 'org.apache.commons:commons-lang3:latest.integration'
    implementation 'org.apache.commons:commons-collections4:latest.integration'
    implementation 'org.apache.commons:commons-text:latest.integration'
    implementation 'org.apache.commons:commons-io:latest.integration'
    implementation 'org.apache.commons:commons-math3:latest.integration'
    implementation 'org.apache.httpcomponents:httpclient:latest.integration'
    // Test
    testImplementation 'org.hamcrest:hamcrest:latest.integration'
    testImplementation 'org.hamcrest:hamcrest-library:latest.integration'
    testImplementation 'junit:junit:latest.integration'
}

jar {
    sourceSets{
        main{
            resources {
                exclude 'conf/**'
            }
        }
    }
}

distributions {
    main {
        contents {
            from('src/main/resources/conf'){
                into 'conf'
            }
        }
    }
}

applicationDefaultJvmArgs = ['-Dlog4j.configurationFile=MY_APP_CONF_DIR/log4j2.yml',
                             '-Dapp.name=MY_APP_NAME',
                             '-Dapp.bin.dir=MY_APP_BIN_DIR',
                             '-Dapp.log.dir=MY_APP_LOG_DIR',
                             '-Dapp.conf.dir=MY_APP_CONF_DIR',
                             '-Dapp.lib.dir=MY_APP_LIB_DIR']

startScripts {
    doLast {
        unixScript.text = unixScript.text.replace('APP_HOME="`pwd -P`"','APP_HOME="`pwd -P`"\n' +
          'APP_BIN_DIR=MY_APP_HOME/bin\n' +
          'APP_LOG_DIR=MY_APP_HOME/log\n' +
          'APP_CONF_DIR=MY_APP_HOME/conf\n' +
          'APP_LIB_DIR=MY_APP_HOME/lib\n'
        )
        windowsScript.text = windowsScript.text.replace('set APP_HOME=%DIRNAME%..','set APP_HOME=%DIRNAME%..\r\n' +
          'set APP_BIN_DIR=MY_APP_HOME\\bin\r\n' +
          'set APP_LOG_DIR=MY_APP_HOME\\log\r\n' +
          'set APP_CONF_DIR=MY_APP_HOME\\conf\r\n' +
          'set APP_LIB_DIR=MY_APP_HOME\\lib\r\n'
        )

        windowsScript.text = windowsScript.text.replace('MY_APP_NAME',    '%APP_NAME%')
        windowsScript.text = windowsScript.text.replace('MY_APP_HOME',    '%APP_HOME%')
        windowsScript.text = windowsScript.text.replace('MY_APP_BIN_DIR', '%APP_BIN_DIR%')
        windowsScript.text = windowsScript.text.replace('MY_APP_LOG_DIR', '%APP_LOG_DIR%')
        windowsScript.text = windowsScript.text.replace('MY_APP_CONF_DIR','%APP_CONF_DIR%')
        windowsScript.text = windowsScript.text.replace('MY_APP_LIB_DIR', '%APP_LIB_DIR%')
        
        unixScript.text = unixScript.text.replace('MY_APP_NAME',    '$APP_NAME')
        unixScript.text = unixScript.text.replace('MY_APP_HOME',    '$APP_HOME')
        unixScript.text = unixScript.text.replace('MY_APP_BIN_DIR', '$APP_BIN_DIR')
        unixScript.text = unixScript.text.replace('MY_APP_LOG_DIR', '$APP_LOG_DIR')
        unixScript.text = unixScript.text.replace('MY_APP_CONF_DIR','$APP_CONF_DIR')
        unixScript.text = unixScript.text.replace('MY_APP_LIB_DIR', '$APP_LIB_DIR')
    }
}